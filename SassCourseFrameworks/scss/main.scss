@import "normalize";
@import "susy";
@import "breakpoint";
@import "compass";

// to define the susy grid
$susy: (
	columns: 16, 
	// debug: (image: show),
	global-box-sizing: border-sizing
);

// to make the border thw width of the element (alternatives: margin, padding, content)
@include border-box-sizing;

$medium-screen: 720px;
$link-color: #330000;

a {
	color: $link-color;

	&:hover {
		color: darken($link-color, 15%);
	}
}

.container {
	@include container(); // can define a width here: container(1140 px)
}

.sidebar-left {
	height: 80vh;
	background-color: rgba(0, 100, 100, 0.6);
	display: none; // don't show on small screens (mobile-first designs)

	@include breakpoint($medium-screen) { // show for 720px or more
		display: block;
		@include span(2 of 16);
	}	
}

.main {
	height: 80vh;
	// width 100% by default

	@include breakpoint($medium-screen) {
		@include span(10 of 16);
	}

	.content {
		overflow: auto;
		height: 60vh;
		padding: 3 * gutter();
		background-color: rgba(100, 0, 0, 0.6);
		@include text-shadow(#aaa 0 1px 0); // compass
		@include column-count(3); // compass

		p {
			margin-top: 0;
		}
	}

	.teaser {
		height: 16vh;
		background-color: rgba(100, 30, 100, 0.6);
		padding: gutter(10); // susy function, it's the space between columns in the context of 10 columns 
		margin: 2vh 0;
		@include span(10 of 10); // for small screens
		@include box-shadow(rgb(85, 25, 85) 0 0 5px); // compass
		@include border-radius(6px); // compass

		@include breakpoint($medium-screen) {
			@include span(2 of 10);

			// to make the last element float to the right
			&:nth-child(5n) {
				@include last;
			}

		}
	}
}

.sidebar-right {
	height: 80vh;
	background-color: rgba(100, 100, 30, 0.6);
	clear: both; // for small screens

	@include breakpoint($medium-screen) {
		clear: none;
		@include span(4 of 16 last); // to float on the right
	}	
}

.footer {
	height: 20vh;
	background-color: rgba(0, 30, 100, 0.6);
	clear: both;
}